{"version":3,"sources":["webpack:///./src/pages/contact.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","createElement","style","color","href","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","createContext","object","func","NavLink","props","react_default","Nav_default","Item","gatsby_link_default","className","styles","navLink","to","children","Navbar_default","bg","Brand","link","layout_NavLink","body"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAGeE,EAAA,0BACbE,EAAAG,EAAAC,cAACF,EAAA,EAAD,KACEF,EAAAG,EAAAC,cAAA,iCACAJ,EAAAG,EAAAC,cAAA,UACEJ,EAAAG,EAAAC,cAAA,KAAGC,MAAO,CAACC,MAAK,SAAYC,KAAK,mCAAjC,oDCPN,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOC,IAAMhB,cAAciB,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,QAIrBX,EAAiBY,UAAY,CAC3BV,SAAUW,IAAUC,MAAM,CACxBR,SAAUO,IAAUE,OAAOC,aAC1BA,YAGUhB,iHCTYO,IAAMU,cAAc,IA0CvCJ,IAAUK,OACTL,IAAUE,OAAOC,WAChBH,IAAUM,KACRN,IAAUM,wECjDhBC,EAAU,SAAAC,GAAK,OACnBC,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAIkC,KAAL,KACEF,EAAAhC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,UAAWC,IAAOC,QAASC,GAAIR,EAAMQ,IACxCR,EAAMS,YAIE7C,EAAA,WAAAgB,GAAA,IAAG6B,EAAH7B,EAAG6B,SAAH,OACbR,EAAAhC,EAAAC,cAAA,WACE+B,EAAAhC,EAAAC,cAACwC,EAAAzC,EAAD,CAAQ0C,GAAG,QACTV,EAAAhC,EAAAC,cAACwC,EAAAzC,EAAO2C,MAAR,KACEX,EAAAhC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,UAAWC,IAAOO,KAAML,GAAG,KAAjC,mBAIFP,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAD,KACEgC,EAAAhC,EAAAC,cAAC4C,EAAD,CAASN,GAAG,WAAZ,SACAP,EAAAhC,EAAAC,cAAC4C,EAAD,CAASN,GAAG,aAAZ,aAGJP,EAAAhC,EAAAC,cAAA,QAAMmC,UAAWC,IAAOS,MAAON","file":"component---src-pages-contact-tsx-7ad1172d6460edfe0e4f.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <h1>Reach out to me at:</h1>\r\n    <h2 >\r\n      <a style={{color: `black`}} href=\"mailto:stephen.zeng55@gmail.com\">stephen.zeng55@gmail.com</a>\r\n    </h2>\r\n  </Layout>\r\n)\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport styles from \"./layout.module.scss\"\r\n\r\nconst NavLink = props => (\r\n  <Nav.Item>\r\n    <Link className={styles.navLink} to={props.to}>\r\n      {props.children}\r\n    </Link>\r\n  </Nav.Item>\r\n)\r\nexport default ({ children }) => (\r\n  <div>\r\n    <Navbar bg=\"dark\">\r\n      <Navbar.Brand>\r\n        <Link className={styles.link} to=\"/\">\r\n          Stephen J Zeng\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Nav>\r\n        <NavLink to=\"/about/\">About</NavLink>\r\n        <NavLink to=\"/contact/\">Contact</NavLink>\r\n      </Nav>\r\n    </Navbar>\r\n    <body className={styles.body}>{children}</body>\r\n  </div>\r\n)\r\n"],"sourceRoot":""}