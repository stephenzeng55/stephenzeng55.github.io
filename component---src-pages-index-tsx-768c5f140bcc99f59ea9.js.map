{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/icon.png","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","react_device_detect__WEBPACK_IMPORTED_MODULE_3__","_ref","data","a","createElement","style","maxWidth","isMobile","margin","fluid","file","childImageSharp","alt","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","p","createContext","object","func","NavLink","props","react_default","Button_default","color","size","gatsby_link_default","className","styles","navLink","to","children","Helmet","AppBar_default","position","Toolbar_default","IconButton_default","homeIconLink","link","src","logo","width","height","layout_NavLink"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAOeE,EAAA,iBAAAU,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACbP,EAAAQ,EAAAC,cAACL,EAAA,EAAD,KACEJ,EAAAQ,EAAAC,cAAA,yCACAT,EAAAQ,EAAAC,cAAA,4BACAT,EAAAQ,EAAAC,cAAA,6GAIAT,EAAAQ,EAAAC,cAAA,OAAKC,MAAO,CAAEC,SAAUC,WAAQ,eAAqBC,OAAM,SACzDb,EAAAQ,EAAAC,cAACN,EAAAK,EAAD,CACEM,MAAOP,EAAKQ,KAAKC,gBAAgBF,MACjCG,IAAI,iCAML,IAAMnB,EAAK,kCCxBlB,IAAsBoB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAjB,GAAkB,IAAfkB,EAAelB,EAAfkB,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOC,IAAMpB,cAAcqB,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,QAIrBV,EAAiBW,UAAY,CAC3BV,SAAUW,IAAUC,MAAM,CACxBR,SAAUO,IAAUE,OAAOC,aAC1BA,YAGUf,iCCrBfJ,EAAAC,QAAiB1B,EAAA6C,EAAuB,wJCYbV,IAAMW,cAAc,IA0CvCL,IAAUM,OACTN,IAAUE,OAAOC,WAChBH,IAAUO,KACRP,IAAUO,8HC9ChBC,EAAU,SAAAC,GAAK,OACnBC,EAAArC,EAAAC,cAACqC,EAAAtC,EAAD,CAAQuC,MAAM,UAAUC,KAAK,UAC3BH,EAAArC,EAAAC,cAACwC,EAAAzC,EAAD,CAAM0C,UAAWC,IAAOC,QAASC,GAAIT,EAAMS,IACxCT,EAAMU,YAIE1D,EAAA,WAAAU,GAAA,IAAGgD,EAAHhD,EAAGgD,SAAH,OACbT,EAAArC,EAAAC,cAAA,WACEoC,EAAArC,EAAAC,cAAC8C,EAAA,OAAD,KACEV,EAAArC,EAAAC,cAAA,0CAEFoC,EAAArC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQiD,SAAS,SAASV,MAAM,aAC9BF,EAAArC,EAAAC,cAACiD,EAAAlD,EAAD,KACEqC,EAAArC,EAAAC,cAACkD,EAAAnD,EAAD,CAAY0C,UAAWC,IAAOS,cAC5Bf,EAAArC,EAAAC,cAACwC,EAAAzC,EAAD,CAAM6C,GAAG,IAAIH,UAAWC,IAAOU,MAC7BhB,EAAArC,EAAAC,cAAA,OACEqD,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPhD,IAAI,wBAIV4B,EAAArC,EAAAC,cAACyD,EAAD,CAASb,GAAG,WAAZ,SACAR,EAAArC,EAAAC,cAACyD,EAAD,CAASb,GAAG,aAAZ,aAGJR,EAAArC,EAAAC,cAAA,OAAKyC,UAAWC,IAAOG,UAAWA","file":"component---src-pages-index-tsx-768c5f140bcc99f59ea9.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport { isMobile } from \"react-device-detect\"\n\nexport default ({ data }) => (\n  <Layout>\n    <h2>Welcome to the portfolio of</h2>\n    <h1>Stephen J Zeng</h1>\n    <p>\n      This is the initial version of my page, look forward to a more exciting\n      page in the near future!\n    </p>\n    <div style={{ maxWidth: isMobile ? `100vw` : `50vw`, margin: `auto` }}>\n      <Img\n        fluid={data.file.childImageSharp.fluid}\n        alt=\"Stephen Zeng with Subarus\"\n      />\n    </div>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"me-and-subarus.jpg\" }) {\n      childImageSharp {\n        fluid(quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/icon-9fd12f2ed9f3f05ec148b983247e1479.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport styles from \"./layout.module.scss\"\nimport logo from \"../images/icon.png\"\nimport { Helmet } from \"react-helmet\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Button from \"@material-ui/core/Button\"\n\nconst NavLink = props => (\n  <Button color=\"inherit\" size=\"medium\" >\n    <Link className={styles.navLink} to={props.to}>\n      {props.children}\n    </Link>\n  </Button>\n)\nexport default ({ children }) => (\n  <div>\n    <Helmet>\n      <title>Stephen J Zeng Portfolio</title>\n    </Helmet>\n    <AppBar position=\"static\" color=\"secondary\">\n      <Toolbar>\n        <IconButton className={styles.homeIconLink}>\n          <Link to=\"/\" className={styles.link}>\n            <img\n              src={logo}\n              width=\"50\"\n              height=\"50\"\n              alt=\"Stephen Zeng Logo\"\n            ></img>\n          </Link>\n        </IconButton>\n        <NavLink to=\"/about/\">About</NavLink>\n        <NavLink to=\"/contact/\">Contact</NavLink>\n      </Toolbar>\n    </AppBar>\n    <div className={styles.children}>{children}</div>\n  </div>\n)\n"],"sourceRoot":""}